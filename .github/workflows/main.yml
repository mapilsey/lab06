name: Release Packages

on:
  push:
    tags:
      - 'v*'

jobs:
  build-packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: 
          - type: DEB
            ext: deb
          - type: RPM
            ext: rpm

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Verify license file exists
      id: check-files
      run: |
        # Проверка и создание LICENSE.txt
        if [ ! -f "LICENSE.txt" ]; then
          echo "Generating MIT license file"
          echo "MIT License" > LICENSE.txt
          echo "Copyright (c) $(date +%Y) Your Name" >> LICENSE.txt
          echo "" >> LICENSE.txt
          echo "Permission is hereby granted, free of charge..." >> LICENSE.txt
        fi
        
        # Проверка и создание README.md
        if [ ! -f "README.md" ]; then
          echo "Generating minimal README"
          echo "# ${GITHUB_REPOSITORY}" > README.md
          echo "Version: ${{ github.ref_name }}" >> README.md
        fi
        
        # Вывод информации о файлах
        ls -la LICENSE.txt README.md
        echo "LICENSE_CONTENT=$(cat LICENSE.txt)" >> $GITHUB_ENV
        echo "README_CONTENT=$(cat README.md)" >> $GITHUB_ENV

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake
        if [ "${{ matrix.package.type }}" = "RPM" ]; then
          sudo apt-get install -y rpm
        fi

    - name: Parse version from tag
      id: version
      run: |
        VERSION="${GITHUB_REF#refs/tags/v}"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "major=${VERSION%%.*}" >> $GITHUB_OUTPUT
        echo "minor=$(echo $VERSION | cut -d. -f2)" >> $GITHUB_OUTPUT
        echo "patch=$(echo $VERSION | cut -d. -f3)" >> $GITHUB_OUTPUT

    - name: Configure CMake
      run: |
        cmake -B build \
          -DPRINT_VERSION_MAJOR=${{ steps.version.outputs.major }} \
          -DPRINT_VERSION_MINOR=${{ steps.version.outputs.minor }} \
          -DPRINT_VERSION_PATCH=${{ steps.version.outputs.patch }} \
          -DCPACK_PACKAGE_DESCRIPTION_FILE="${GITHUB_WORKSPACE}/README.md" \
          -DCPACK_RESOURCE_FILE_LICENSE="${GITHUB_WORKSPACE}/LICENSE.txt"

    - name: Build project
      run: cmake --build build --config Release

    - name: Generate package
      run: |
        cd build
        cpack -G ${{ matrix.package.type }} --config CPackConfig.cmake
        cd ..

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.package.type }}-package
        path: build/*.${{ matrix.package.ext }}

  create-release:
    needs: build-packages
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: "Release ${{ github.ref_name }}"
        files: artifacts/**/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
