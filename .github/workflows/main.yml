name: Release Packages

on:
  push:
    tags:
      - 'v*'  # Фильтр для тегов, начинающихся с 'v'

jobs:
  build-packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: 
          - type: DEB
            ext: deb
          - type: RPM
            ext: rpm
          # Добавьте другие типы пакетов при необходимости:
          # - type: TGZ
          #   ext: tar.gz
          # - type: ZIP
          #   ext: zip

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake
        if [ "${{ matrix.package.type }}" = "RPM" ]; then
          sudo apt-get install -y rpm
        fi

    - name: Parse version from tag
      id: version
      run: |
        VERSION="${GITHUB_REF#refs/tags/v}"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "major=${VERSION%%.*}" >> $GITHUB_OUTPUT
        echo "minor=$(echo $VERSION | cut -d. -f2)" >> $GITHUB_OUTPUT
        echo "patch=$(echo $VERSION | cut -d. -f3)" >> $GITHUB_OUTPUT

    - name: Configure CMake with version
      run: |
        cmake -B build \
          -DPRINT_VERSION_MAJOR=${{ steps.version.outputs.major }} \
          -DPRINT_VERSION_MINOR=${{ steps.version.outputs.minor }} \
          -DPRINT_VERSION_PATCH=${{ steps.version.outputs.patch }} \
          -DCPACK_GENERATOR=${{ matrix.package.type }}

    - name: Build project
      run: cmake --build build --config Release

    - name: Generate package
      run: |
        cd build
        cpack -G ${{ matrix.package.type }}
        cd ..

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.package.type }}-package
        path: build/*.${{ matrix.package.ext }}

  create-release:
    needs: build-packages
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: "Release ${{ github.ref_name }}"
        files: artifacts/**/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
